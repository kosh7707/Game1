// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Struct.proto

#include "Struct.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Protocol {

inline constexpr CreatureState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : posx_{0},
        posy_{0},
        basestate_{static_cast< ::Protocol::BaseState >(0)},
        movedir_{static_cast< ::Protocol::MoveDir >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CreatureState::CreatureState(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CreatureStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreatureStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreatureStateDefaultTypeInternal() {}
  union {
    CreatureState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreatureStateDefaultTypeInternal _CreatureState_default_instance_;

inline constexpr CharacterInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characterid_{::uint64_t{0u}},
        playertype_{static_cast< ::Protocol::PlayerType >(0)},
        level_{0u},
        hp_{0},
        exp_{0},
        attack_{0u},
        mapid_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CharacterInfo::CharacterInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CharacterInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterInfoDefaultTypeInternal() {}
  union {
    CharacterInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterInfoDefaultTypeInternal _CharacterInfo_default_instance_;

inline constexpr Player::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        playerstate_{nullptr},
        playerid_{::uint64_t{0u}},
        characterid_{::uint64_t{0u}},
        playertype_{static_cast< ::Protocol::PlayerType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Player::Player(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PlayerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerDefaultTypeInternal() {}
  union {
    Player _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerDefaultTypeInternal _Player_default_instance_;
}  // namespace Protocol
static ::_pb::Metadata file_level_metadata_Struct_2eproto[3];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_Struct_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_Struct_2eproto = nullptr;
const ::uint32_t TableStruct_Struct_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Protocol::CharacterInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Protocol::CharacterInfo, _impl_.characterid_),
    PROTOBUF_FIELD_OFFSET(::Protocol::CharacterInfo, _impl_.playertype_),
    PROTOBUF_FIELD_OFFSET(::Protocol::CharacterInfo, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::Protocol::CharacterInfo, _impl_.level_),
    PROTOBUF_FIELD_OFFSET(::Protocol::CharacterInfo, _impl_.hp_),
    PROTOBUF_FIELD_OFFSET(::Protocol::CharacterInfo, _impl_.exp_),
    PROTOBUF_FIELD_OFFSET(::Protocol::CharacterInfo, _impl_.attack_),
    PROTOBUF_FIELD_OFFSET(::Protocol::CharacterInfo, _impl_.mapid_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Protocol::CreatureState, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Protocol::CreatureState, _impl_.posx_),
    PROTOBUF_FIELD_OFFSET(::Protocol::CreatureState, _impl_.posy_),
    PROTOBUF_FIELD_OFFSET(::Protocol::CreatureState, _impl_.basestate_),
    PROTOBUF_FIELD_OFFSET(::Protocol::CreatureState, _impl_.movedir_),
    PROTOBUF_FIELD_OFFSET(::Protocol::Player, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::Protocol::Player, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Protocol::Player, _impl_.playerid_),
    PROTOBUF_FIELD_OFFSET(::Protocol::Player, _impl_.characterid_),
    PROTOBUF_FIELD_OFFSET(::Protocol::Player, _impl_.playertype_),
    PROTOBUF_FIELD_OFFSET(::Protocol::Player, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::Protocol::Player, _impl_.playerstate_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::Protocol::CharacterInfo)},
        {16, -1, -1, sizeof(::Protocol::CreatureState)},
        {28, 41, -1, sizeof(::Protocol::Player)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::Protocol::_CharacterInfo_default_instance_._instance,
    &::Protocol::_CreatureState_default_instance_._instance,
    &::Protocol::_Player_default_instance_._instance,
};
const char descriptor_table_protodef_Struct_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\014Struct.proto\022\010Protocol\032\nEnum.proto\"\243\001\n"
    "\rCharacterInfo\022\023\n\013characterId\030\001 \001(\004\022(\n\np"
    "layerType\030\002 \001(\0162\024.Protocol.PlayerType\022\014\n"
    "\004name\030\003 \001(\t\022\r\n\005level\030\004 \001(\r\022\n\n\002hp\030\005 \001(\005\022\013"
    "\n\003exp\030\006 \001(\005\022\016\n\006attack\030\007 \001(\r\022\r\n\005mapId\030\010 \001"
    "(\r\"w\n\rCreatureState\022\014\n\004posX\030\001 \001(\002\022\014\n\004pos"
    "Y\030\002 \001(\002\022&\n\tbaseState\030\003 \001(\0162\023.Protocol.Ba"
    "seState\022\"\n\007moveDir\030\004 \001(\0162\021.Protocol.Move"
    "Dir\"\225\001\n\006Player\022\020\n\010playerId\030\001 \001(\004\022\023\n\013char"
    "acterId\030\002 \001(\004\022(\n\nplayerType\030\003 \001(\0162\024.Prot"
    "ocol.PlayerType\022\014\n\004name\030\004 \001(\t\022,\n\013playerS"
    "tate\030\005 \001(\0132\027.Protocol.CreatureStateB\036\370\001\001"
    "\252\002\030Google.Protobuf.Protocolb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_Struct_2eproto_deps[1] =
    {
        &::descriptor_table_Enum_2eproto,
};
static ::absl::once_flag descriptor_table_Struct_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Struct_2eproto = {
    false,
    false,
    515,
    descriptor_table_protodef_Struct_2eproto,
    "Struct.proto",
    &descriptor_table_Struct_2eproto_once,
    descriptor_table_Struct_2eproto_deps,
    1,
    3,
    schemas,
    file_default_instances,
    TableStruct_Struct_2eproto::offsets,
    file_level_metadata_Struct_2eproto,
    file_level_enum_descriptors_Struct_2eproto,
    file_level_service_descriptors_Struct_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Struct_2eproto_getter() {
  return &descriptor_table_Struct_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Struct_2eproto(&descriptor_table_Struct_2eproto);
namespace Protocol {
// ===================================================================

class CharacterInfo::_Internal {
 public:
};

CharacterInfo::CharacterInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.CharacterInfo)
}
inline PROTOBUF_NDEBUG_INLINE CharacterInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        _cached_size_{0} {}

CharacterInfo::CharacterInfo(
    ::google::protobuf::Arena* arena,
    const CharacterInfo& from)
    : ::google::protobuf::Message(arena) {
  CharacterInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, characterid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, characterid_),
           offsetof(Impl_, mapid_) -
               offsetof(Impl_, characterid_) +
               sizeof(Impl_::mapid_));

  // @@protoc_insertion_point(copy_constructor:Protocol.CharacterInfo)
}
inline PROTOBUF_NDEBUG_INLINE CharacterInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void CharacterInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, characterid_),
           0,
           offsetof(Impl_, mapid_) -
               offsetof(Impl_, characterid_) +
               sizeof(Impl_::mapid_));
}
CharacterInfo::~CharacterInfo() {
  // @@protoc_insertion_point(destructor:Protocol.CharacterInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CharacterInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CharacterInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.CharacterInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.characterid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.mapid_) -
      reinterpret_cast<char*>(&_impl_.characterid_)) + sizeof(_impl_.mapid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CharacterInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 43, 2> CharacterInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CharacterInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 mapId = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CharacterInfo, _impl_.mapid_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(CharacterInfo, _impl_.mapid_)}},
    // uint64 characterId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CharacterInfo, _impl_.characterid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CharacterInfo, _impl_.characterid_)}},
    // .Protocol.PlayerType playerType = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CharacterInfo, _impl_.playertype_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CharacterInfo, _impl_.playertype_)}},
    // string name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CharacterInfo, _impl_.name_)}},
    // uint32 level = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CharacterInfo, _impl_.level_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(CharacterInfo, _impl_.level_)}},
    // int32 hp = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CharacterInfo, _impl_.hp_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(CharacterInfo, _impl_.hp_)}},
    // int32 exp = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CharacterInfo, _impl_.exp_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(CharacterInfo, _impl_.exp_)}},
    // uint32 attack = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CharacterInfo, _impl_.attack_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(CharacterInfo, _impl_.attack_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 characterId = 1;
    {PROTOBUF_FIELD_OFFSET(CharacterInfo, _impl_.characterid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .Protocol.PlayerType playerType = 2;
    {PROTOBUF_FIELD_OFFSET(CharacterInfo, _impl_.playertype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string name = 3;
    {PROTOBUF_FIELD_OFFSET(CharacterInfo, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 level = 4;
    {PROTOBUF_FIELD_OFFSET(CharacterInfo, _impl_.level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // int32 hp = 5;
    {PROTOBUF_FIELD_OFFSET(CharacterInfo, _impl_.hp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 exp = 6;
    {PROTOBUF_FIELD_OFFSET(CharacterInfo, _impl_.exp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // uint32 attack = 7;
    {PROTOBUF_FIELD_OFFSET(CharacterInfo, _impl_.attack_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 mapId = 8;
    {PROTOBUF_FIELD_OFFSET(CharacterInfo, _impl_.mapid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\26\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0"
    "Protocol.CharacterInfo"
    "name"
  }},
};

::uint8_t* CharacterInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.CharacterInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 characterId = 1;
  if (this->_internal_characterid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_characterid(), target);
  }

  // .Protocol.PlayerType playerType = 2;
  if (this->_internal_playertype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_playertype(), target);
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Protocol.CharacterInfo.name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // uint32 level = 4;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_level(), target);
  }

  // int32 hp = 5;
  if (this->_internal_hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_hp(), target);
  }

  // int32 exp = 6;
  if (this->_internal_exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_exp(), target);
  }

  // uint32 attack = 7;
  if (this->_internal_attack() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_attack(), target);
  }

  // uint32 mapId = 8;
  if (this->_internal_mapid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_mapid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.CharacterInfo)
  return target;
}

::size_t CharacterInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.CharacterInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 3;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // uint64 characterId = 1;
  if (this->_internal_characterid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_characterid());
  }

  // .Protocol.PlayerType playerType = 2;
  if (this->_internal_playertype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_playertype());
  }

  // uint32 level = 4;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_level());
  }

  // int32 hp = 5;
  if (this->_internal_hp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_hp());
  }

  // int32 exp = 6;
  if (this->_internal_exp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_exp());
  }

  // uint32 attack = 7;
  if (this->_internal_attack() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_attack());
  }

  // uint32 mapId = 8;
  if (this->_internal_mapid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_mapid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CharacterInfo::_class_data_ = {
    CharacterInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CharacterInfo::GetClassData() const {
  return &_class_data_;
}

void CharacterInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CharacterInfo*>(&to_msg);
  auto& from = static_cast<const CharacterInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.CharacterInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_characterid() != 0) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  if (from._internal_playertype() != 0) {
    _this->_internal_set_playertype(from._internal_playertype());
  }
  if (from._internal_level() != 0) {
    _this->_internal_set_level(from._internal_level());
  }
  if (from._internal_hp() != 0) {
    _this->_internal_set_hp(from._internal_hp());
  }
  if (from._internal_exp() != 0) {
    _this->_internal_set_exp(from._internal_exp());
  }
  if (from._internal_attack() != 0) {
    _this->_internal_set_attack(from._internal_attack());
  }
  if (from._internal_mapid() != 0) {
    _this->_internal_set_mapid(from._internal_mapid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterInfo::CopyFrom(const CharacterInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.CharacterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CharacterInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CharacterInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CharacterInfo::InternalSwap(CharacterInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CharacterInfo, _impl_.mapid_)
      + sizeof(CharacterInfo::_impl_.mapid_)
      - PROTOBUF_FIELD_OFFSET(CharacterInfo, _impl_.characterid_)>(
          reinterpret_cast<char*>(&_impl_.characterid_),
          reinterpret_cast<char*>(&other->_impl_.characterid_));
}

::google::protobuf::Metadata CharacterInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Struct_2eproto_getter, &descriptor_table_Struct_2eproto_once,
      file_level_metadata_Struct_2eproto[0]);
}
// ===================================================================

class CreatureState::_Internal {
 public:
};

CreatureState::CreatureState(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.CreatureState)
}
CreatureState::CreatureState(
    ::google::protobuf::Arena* arena, const CreatureState& from)
    : CreatureState(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CreatureState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreatureState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, posx_),
           0,
           offsetof(Impl_, movedir_) -
               offsetof(Impl_, posx_) +
               sizeof(Impl_::movedir_));
}
CreatureState::~CreatureState() {
  // @@protoc_insertion_point(destructor:Protocol.CreatureState)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CreatureState::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CreatureState::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.CreatureState)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.posx_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.movedir_) -
      reinterpret_cast<char*>(&_impl_.posx_)) + sizeof(_impl_.movedir_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CreatureState::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> CreatureState::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CreatureState_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .Protocol.MoveDir moveDir = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CreatureState, _impl_.movedir_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(CreatureState, _impl_.movedir_)}},
    // float posX = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(CreatureState, _impl_.posx_)}},
    // float posY = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(CreatureState, _impl_.posy_)}},
    // .Protocol.BaseState baseState = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CreatureState, _impl_.basestate_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CreatureState, _impl_.basestate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float posX = 1;
    {PROTOBUF_FIELD_OFFSET(CreatureState, _impl_.posx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float posY = 2;
    {PROTOBUF_FIELD_OFFSET(CreatureState, _impl_.posy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .Protocol.BaseState baseState = 3;
    {PROTOBUF_FIELD_OFFSET(CreatureState, _impl_.basestate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .Protocol.MoveDir moveDir = 4;
    {PROTOBUF_FIELD_OFFSET(CreatureState, _impl_.movedir_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CreatureState::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.CreatureState)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float posX = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_posx = this->_internal_posx();
  ::uint32_t raw_posx;
  memcpy(&raw_posx, &tmp_posx, sizeof(tmp_posx));
  if (raw_posx != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_posx(), target);
  }

  // float posY = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_posy = this->_internal_posy();
  ::uint32_t raw_posy;
  memcpy(&raw_posy, &tmp_posy, sizeof(tmp_posy));
  if (raw_posy != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_posy(), target);
  }

  // .Protocol.BaseState baseState = 3;
  if (this->_internal_basestate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_basestate(), target);
  }

  // .Protocol.MoveDir moveDir = 4;
  if (this->_internal_movedir() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_movedir(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.CreatureState)
  return target;
}

::size_t CreatureState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.CreatureState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float posX = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_posx = this->_internal_posx();
  ::uint32_t raw_posx;
  memcpy(&raw_posx, &tmp_posx, sizeof(tmp_posx));
  if (raw_posx != 0) {
    total_size += 5;
  }

  // float posY = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_posy = this->_internal_posy();
  ::uint32_t raw_posy;
  memcpy(&raw_posy, &tmp_posy, sizeof(tmp_posy));
  if (raw_posy != 0) {
    total_size += 5;
  }

  // .Protocol.BaseState baseState = 3;
  if (this->_internal_basestate() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_basestate());
  }

  // .Protocol.MoveDir moveDir = 4;
  if (this->_internal_movedir() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_movedir());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CreatureState::_class_data_ = {
    CreatureState::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CreatureState::GetClassData() const {
  return &_class_data_;
}

void CreatureState::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CreatureState*>(&to_msg);
  auto& from = static_cast<const CreatureState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.CreatureState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_posx = from._internal_posx();
  ::uint32_t raw_posx;
  memcpy(&raw_posx, &tmp_posx, sizeof(tmp_posx));
  if (raw_posx != 0) {
    _this->_internal_set_posx(from._internal_posx());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_posy = from._internal_posy();
  ::uint32_t raw_posy;
  memcpy(&raw_posy, &tmp_posy, sizeof(tmp_posy));
  if (raw_posy != 0) {
    _this->_internal_set_posy(from._internal_posy());
  }
  if (from._internal_basestate() != 0) {
    _this->_internal_set_basestate(from._internal_basestate());
  }
  if (from._internal_movedir() != 0) {
    _this->_internal_set_movedir(from._internal_movedir());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreatureState::CopyFrom(const CreatureState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.CreatureState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CreatureState::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CreatureState::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CreatureState::InternalSwap(CreatureState* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreatureState, _impl_.movedir_)
      + sizeof(CreatureState::_impl_.movedir_)
      - PROTOBUF_FIELD_OFFSET(CreatureState, _impl_.posx_)>(
          reinterpret_cast<char*>(&_impl_.posx_),
          reinterpret_cast<char*>(&other->_impl_.posx_));
}

::google::protobuf::Metadata CreatureState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Struct_2eproto_getter, &descriptor_table_Struct_2eproto_once,
      file_level_metadata_Struct_2eproto[1]);
}
// ===================================================================

class Player::_Internal {
 public:
  using HasBits = decltype(std::declval<Player>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Player, _impl_._has_bits_);
  static const ::Protocol::CreatureState& playerstate(const Player* msg);
  static void set_has_playerstate(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Protocol::CreatureState& Player::_Internal::playerstate(const Player* msg) {
  return *msg->_impl_.playerstate_;
}
Player::Player(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.Player)
}
inline PROTOBUF_NDEBUG_INLINE Player::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

Player::Player(
    ::google::protobuf::Arena* arena,
    const Player& from)
    : ::google::protobuf::Message(arena) {
  Player* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.playerstate_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::Protocol::CreatureState>(arena, *from._impl_.playerstate_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, playerid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, playerid_),
           offsetof(Impl_, playertype_) -
               offsetof(Impl_, playerid_) +
               sizeof(Impl_::playertype_));

  // @@protoc_insertion_point(copy_constructor:Protocol.Player)
}
inline PROTOBUF_NDEBUG_INLINE Player::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena) {}

inline void Player::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, playerstate_),
           0,
           offsetof(Impl_, playertype_) -
               offsetof(Impl_, playerstate_) +
               sizeof(Impl_::playertype_));
}
Player::~Player() {
  // @@protoc_insertion_point(destructor:Protocol.Player)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Player::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  delete _impl_.playerstate_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Player::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.Player)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.playerstate_ != nullptr);
    _impl_.playerstate_->Clear();
  }
  ::memset(&_impl_.playerid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.playertype_) -
      reinterpret_cast<char*>(&_impl_.playerid_)) + sizeof(_impl_.playertype_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Player::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 28, 2> Player::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Player, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Player_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 playerId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Player, _impl_.playerid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.playerid_)}},
    // uint64 characterId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Player, _impl_.characterid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.characterid_)}},
    // .Protocol.PlayerType playerType = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Player, _impl_.playertype_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.playertype_)}},
    // string name = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.name_)}},
    // .Protocol.CreatureState playerState = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(Player, _impl_.playerstate_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 playerId = 1;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.playerid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 characterId = 2;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.characterid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .Protocol.PlayerType playerType = 3;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.playertype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string name = 4;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .Protocol.CreatureState playerState = 5;
    {PROTOBUF_FIELD_OFFSET(Player, _impl_.playerstate_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Protocol::CreatureState>()},
  }}, {{
    "\17\0\0\0\4\0\0\0"
    "Protocol.Player"
    "name"
  }},
};

::uint8_t* Player::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.Player)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 playerId = 1;
  if (this->_internal_playerid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_playerid(), target);
  }

  // uint64 characterId = 2;
  if (this->_internal_characterid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_characterid(), target);
  }

  // .Protocol.PlayerType playerType = 3;
  if (this->_internal_playertype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_playertype(), target);
  }

  // string name = 4;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Protocol.Player.name");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .Protocol.CreatureState playerState = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::playerstate(this),
        _Internal::playerstate(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.Player)
  return target;
}

::size_t Player::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.Player)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 4;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // .Protocol.CreatureState playerState = 5;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.playerstate_);
  }

  // uint64 playerId = 1;
  if (this->_internal_playerid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_playerid());
  }

  // uint64 characterId = 2;
  if (this->_internal_characterid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_characterid());
  }

  // .Protocol.PlayerType playerType = 3;
  if (this->_internal_playertype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_playertype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Player::_class_data_ = {
    Player::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Player::GetClassData() const {
  return &_class_data_;
}

void Player::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Player*>(&to_msg);
  auto& from = static_cast<const Player&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.Player)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_playerstate()->::Protocol::CreatureState::MergeFrom(
        from._internal_playerstate());
  }
  if (from._internal_playerid() != 0) {
    _this->_internal_set_playerid(from._internal_playerid());
  }
  if (from._internal_characterid() != 0) {
    _this->_internal_set_characterid(from._internal_characterid());
  }
  if (from._internal_playertype() != 0) {
    _this->_internal_set_playertype(from._internal_playertype());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Player::CopyFrom(const Player& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Player::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Player::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Player::InternalSwap(Player* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Player, _impl_.playertype_)
      + sizeof(Player::_impl_.playertype_)
      - PROTOBUF_FIELD_OFFSET(Player, _impl_.playerstate_)>(
          reinterpret_cast<char*>(&_impl_.playerstate_),
          reinterpret_cast<char*>(&other->_impl_.playerstate_));
}

::google::protobuf::Metadata Player::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Struct_2eproto_getter, &descriptor_table_Struct_2eproto_once,
      file_level_metadata_Struct_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
